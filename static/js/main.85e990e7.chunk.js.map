{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/TodoCounter.js","TodoSearch/TodoSearch.js","TodoList/TodoList.js","TodoItem/TodoItem.js","CreateTodoButton/CreateTodoButton.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/App.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedTodos","useLocalStorage","todos","setTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","filteredTodos","searchLower","toLowerCase","text","includes","Provider","value","completeTodos","todoIndex","findIndex","newTodos","deleteTodos","splice","addTodo","push","id","children","TodoCounter","useContext","Fragment","TodoSearch","className","type","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","icon","faCheck","onDelete","faTimes","CreateTodoButton","prevState","faPlus","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","AppUI","style","maxWidth","height","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.85e990e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n    const {\r\n        item: todos,\r\n        saveItem: setTodos,\r\n        loading,\r\n        error\r\n    } = useLocalStorage('TODOS_V1', []);\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const completedTodos = todos.filter(todo => todo.completed).length;\r\n    const totalTodos = todos.length;\r\n\r\n    let filteredTodos = [];\r\n\r\n    if (searchValue.length > 0) {\r\n        filteredTodos = todos.filter(todo => {\r\n            const searchLower = searchValue.toLowerCase();\r\n            const todoTextLower = todo.text.toLowerCase();\r\n            return todoTextLower.includes(searchLower);\r\n        });\r\n        // console.log(filteredTodos);\r\n    } else {\r\n        filteredTodos = todos;\r\n    }\r\n\r\n    const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n            id: todos.length, \r\n            text: text,\r\n            completed: false\r\n        });\r\n        setTodos(newTodos);\r\n        // setTodos(newTodos);\r\n    }\r\n\r\n    const completeTodos = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        todos[todoIndex].completed = true;\r\n        setTodos(newTodos);\r\n        // setTodos(newTodos);\r\n    }\r\n\r\n    const deleteTodos = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1);\r\n        setTodos(newTodos);\r\n        // setTodos(newTodos);\r\n    }\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            filteredTodos,\r\n            completeTodos,\r\n            deleteTodos,\r\n            openModal,\r\n            setOpenModal,\r\n            addTodo\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider >\r\n    );\r\n}\r\n\r\n{/* <TodoContext.Consumer></TodoContext.Consumer> */}\r\nexport { TodoContext, TodoProvider };","import React from \"react\";\r\n\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n    const [item, setItem] = React.useState(initialValue);\r\n  \r\n    React.useEffect(() => {\r\n      setTimeout(() => {\r\n        try {\r\n          const localStorageItem = localStorage.getItem(itemName);\r\n          let parsedItem;\r\n  \r\n          if (!localStorageItem) {\r\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n            parsedItem = initialValue;\r\n          } else {\r\n            parsedItem = JSON.parse(localStorageItem);\r\n          }\r\n  \r\n          setItem(parsedItem);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          setError(error);\r\n        }\r\n      }, 1500)\r\n    })\r\n  \r\n  \r\n  \r\n    const saveItem = (newItem) => {\r\n      try {\r\n        const stringifiedTodos = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifiedTodos);\r\n        setItem(newItem);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n  \r\n    return {\r\n      item,\r\n      saveItem,\r\n      loading,\r\n      error\r\n    };\r\n  }\r\n\r\n  export { useLocalStorage };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\n\r\nfunction TodoCounter() {\r\n    const {totalTodos, completedTodos} = React.useContext(TodoContext);\r\n    return (\r\n        <React.Fragment>\r\n            <h1>You've completed {completedTodos} of {totalTodos} todos</h1>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport  { TodoCounter };\r\n","import React from \"react\";\r\nimport '../bootstrap.min.css';\r\nimport { TodoContext } from '../TodoContext';\r\n\r\nfunction TodoSearch() {\r\n    const {searchValue, setSearchValue} = React.useContext(TodoContext);\r\n    const onSearch = (event) => {\r\n        console.log(event.target.value);\r\n        setSearchValue(event.target.value)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {/* <input type=\"search\" placeholder=\"Type  your todo...\" /> */}\r\n\r\n            <div className={\"form-group\"}>\r\n                {/* <label className={`col-form-label col-form-label-lg mt-4`} for=\"inputLarge\">Large input</label> */}\r\n                <input className={`form-control form-control-lg`} type=\"seach\" placeholder=\"Type your todo\" id=\"inputLarge\" \r\n                onChange={onSearch}\r\n                value={searchValue}/>\r\n            </div>\r\n            {/* <h2>{searchValue}</h2> */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { TodoSearch };","import React from \"react\";\r\n\r\nfunction TodoList(props){\r\n    return(\r\n        <React.Fragment>\r\n            <ul className={'list-group'}>\r\n            {props.children}\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { TodoList };","import React from \"react\";\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCheck, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport './TodoItem.css';\r\n\r\n\r\n\r\nfunction TodoItem(props){\r\n    return( \r\n        <React.Fragment>\r\n            <li className={`list-group-item d-flex flex-row justify-content-between`}>\r\n                <span className={`check ${props.completed && 'check-completed'}`} onClick={props.onComplete}>\r\n                    <FontAwesomeIcon icon={faCheck}/>\r\n                </span>\r\n                <p className={`${props.completed && 'text-completed'}`}>{props.text}</p>\r\n                <span className={`delete`}>\r\n                    <button type=\"button\" className={\"btn btn-secondary delete\"} onClick={props.onDelete}>\r\n                        <FontAwesomeIcon icon={faTimes}/>\r\n                    </button>\r\n                </span>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { TodoItem };","import React from \"react\";\r\n\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport './CreateTodoButton.css';\r\n\r\nfunction CreateTodoButton(props){\r\n    const onClickButton = () => {\r\n        props.setOpenModal(prevState => !prevState);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <button type=\"button\" className={\"btn btn-secondary  CreateTodoButton\"} onClick={onClickButton}>\r\n                <FontAwesomeIcon icon={faPlus}/>\r\n            </button>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { CreateTodoButton };","import React from \"react\";\r\nimport  ReactDOM  from \"react-dom\";\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children }) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    )\r\n}\r\n\r\nexport { Modal };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\n\r\nfunction TodoForm() {\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n    const {\r\n        addTodo,\r\n        setOpenModal\r\n    } = React.useContext(TodoContext);\r\n\r\n    const onChange = (event) => {\r\n        setNewTodoValue(event.target.value);\r\n    }\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false);\r\n    };\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>...</label>\r\n            <textarea\r\n                placeholder=\"type your new task...\"\r\n                onChange={onChange} />\r\n            <div>\r\n                <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport { TodoForm };","import React from \"react\";\r\n\r\nimport { TodoCounter } from '../TodoCounter/TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch/TodoSearch';\r\nimport { TodoList } from '../TodoList/TodoList';\r\nimport { TodoItem } from '../TodoItem/TodoItem';\r\nimport { CreateTodoButton } from '../CreateTodoButton/CreateTodoButton';\r\nimport { TodoContext } from '../TodoContext';\r\nimport { Modal } from '../Modal';\r\nimport { TodoForm } from '../TodoForm/index';\r\n\r\nfunction AppUI() {\r\n  const {\r\n    loading,\r\n    error,\r\n    totalTodos,\r\n    completeTodos,\r\n    searchValue,\r\n    setSearchValue,\r\n    filteredTodos,\r\n    completedTodos,\r\n    deleteTodos,\r\n    openModal,\r\n    setOpenModal\r\n  } = React.useContext(TodoContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TodoCounter />\r\n      <TodoSearch />\r\n      <TodoList>\r\n        {error && <p>Desesperate now!</p>}\r\n        {loading && \r\n          <div className=\"card border-primary mb-3\" style={{maxWidth: 20 + \"rem\", height: 5 + 'rem'}}>  \r\n              &nbsp;.\r\n            </div>}\r\n        {(!loading && filteredTodos === 0) && <p>You have no todos, asshole.</p>}\r\n\r\n        {filteredTodos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            text={todo.text}\r\n            completed={todo.completed}\r\n            onComplete={() => completeTodos(todo.text)}\r\n            onDelete={() => deleteTodos(todo.text)} />\r\n        ))}\r\n      </TodoList>\r\n          {openModal && (\r\n            <Modal>\r\n              <TodoForm />\r\n            </Modal>\r\n          )}\r\n      <CreateTodoButton \r\n        setOpenModal={setOpenModal}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { AppUI };","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nimport { AppUI } from './AppUI';\nimport { TodoProvider } from '../TodoContext';\n// const defaultTodos = [\n//   { id: 1, text: 'AAAA', completed: true },\n//   { id: 2, text: 'BBB', completed: false },\n//   { id: 3, text: 'CALLAO', completed: true },\n//   { id: 4, text: 'NANANA', completed: false }\n// ];\n\nfunction App() {\n  // console.log('Before render');\n  // React.useEffect(() => {\n  //   console.log('use effect');\n  // }, []);\n  // console.log('After render');\n\n  return (\n    <React.Fragment>\n      <TodoProvider>\n        <AppUI />\n      </TodoProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}